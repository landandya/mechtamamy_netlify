import { type NextRequest, NextResponse } from "next/server"

const TELEGRAM_BOT_TOKEN = process.env.TELEGRAM_BOT_TOKEN
const TELEGRAM_API_URL = process.env.TELEGRAM_API_URL || `https://api.telegram.org/bot${TELEGRAM_BOT_TOKEN}`

// –ö–æ–Ω–∫—Ä–µ—Ç–Ω—ã–π chat_id –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
const ADMIN_CHAT_ID = process.env.TELEGRAM_ADMIN_CHAT_ID as string

if (!ADMIN_CHAT_ID) throw new Error('TELEGRAM_ADMIN_CHAT_ID is not set');

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–π —á–∞—Ç
async function sendTelegramMessage(chatId: string, message: string) {
  try {
    const response = await fetch(`${TELEGRAM_API_URL}/sendMessage`, {
      method: "POST",
      headers: {
        "Content-Type": "application/json",
      },
      body: JSON.stringify({
        chat_id: chatId,
        text: message,
        parse_mode: "HTML",
      }),
    })

    const data = await response.json()

    if (!data.ok) {
      console.error(`–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –≤ —á–∞—Ç ${chatId}:`, data.description)
      return false
    }

    console.log(`–°–æ–æ–±—â–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –≤ —á–∞—Ç ${chatId}`)
    return true
  } catch (error) {
    console.error(`–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ —á–∞—Ç ${chatId}:`, error)
    return false
  }
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ä–∞–±–æ—Ç–æ—Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç–∏ –±–æ—Ç–∞
async function checkBotStatus() {
  try {
    const response = await fetch(`${TELEGRAM_API_URL}/getMe`)
    const data = await response.json()

    if (data.ok) {
      console.log("–ë–æ—Ç –∞–∫—Ç–∏–≤–µ–Ω:", data.result.username)
      return true
    } else {
      console.error("–ë–æ—Ç –Ω–µ –∞–∫—Ç–∏–≤–µ–Ω:", data.description)
      return false
    }
  } catch (error) {
    console.error("–û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å—Ç–∞—Ç—É—Å–∞ –±–æ—Ç–∞:", error)
    return false
  }
}

export async function POST(request: NextRequest) {
  try {
    const body = await request.json()
    const { name, contact, size, comment, agreeToTerms, agreeToPrivacy, agreeToMarketing } = body

    // –í–∞–ª–∏–¥–∞—Ü–∏—è –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã—Ö –ø–æ–ª–µ–π
    if (!name || !contact || !size) {
      return NextResponse.json({ error: "–ó–∞–ø–æ–ª–Ω–∏—Ç–µ –≤—Å–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –ø–æ–ª—è" }, { status: 400 })
    }

    // –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ–≥–ª–∞—Å–∏—è —Å —É—Å–ª–æ–≤–∏—è–º–∏
    if (!agreeToTerms || !agreeToPrivacy) {
      return NextResponse.json(
        {
          error: "–ù–µ–æ–±—Ö–æ–¥–∏–º–æ —Å–æ–≥–ª–∞—Å–∏—Ç—å—Å—è —Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–º —Å–æ–≥–ª–∞—à–µ–Ω–∏–µ–º –∏ –ø—É–±–ª–∏—á–Ω–æ–π –æ—Ñ–µ—Ä—Ç–æ–π",
        },
        { status: 400 },
      )
    }

    // –ü–æ–ª—É—á–∞–µ–º —Ä–∞–∑–º–µ—Ä –∏ —Ü–µ–Ω—É
    const sizeLabels: { [key: string]: string } = {
      a2: process.env.SIZE_LABEL_A2 || "A2 (42√ó59 —Å–º) - 5000‚ÇΩ",
      a3: process.env.SIZE_LABEL_A3 || "A3 (30√ó42 —Å–º) - 3000‚ÇΩ",
      a4: process.env.SIZE_LABEL_A4 || "A4 (21√ó30 —Å–º) - 2000‚ÇΩ",
      a5: process.env.SIZE_LABEL_A5 || "A5 (15√ó21 —Å–º) - 1500‚ÇΩ",
    }

    const sizeLabel = sizeLabels[size] || size

    // –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è Telegram
    const telegramMessage = `
${process.env.TELEGRAM_MESSAGE_HEADER || "üé® <b>–ù–û–í–ê–Ø –ó–ê–Ø–í–ö–ê –ù–ê –ü–û–†–¢–†–ï–¢!</b>"}

üë§ <b>–ò–º—è:</b> ${name}
üìû <b>–ö–æ–Ω—Ç–∞–∫—Ç:</b> ${contact}
üìè <b>–†–∞–∑–º–µ—Ä:</b> ${sizeLabel}
${comment ? `üí¨ <b>–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π:</b> ${comment}` : ""}

‚úÖ <b>–°–æ–≥–ª–∞—Å–∏—è:</b>
‚Ä¢ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–µ —Å–æ–≥–ª–∞—à–µ–Ω–∏–µ: ‚úÖ
‚Ä¢ –ü—É–±–ª–∏—á–Ω–∞—è –æ—Ñ–µ—Ä—Ç–∞: ‚úÖ
‚Ä¢ –†–µ–∫–ª–∞–º–Ω—ã–µ –º–∞—Ç–µ—Ä–∏–∞–ª—ã: ${agreeToMarketing ? "‚úÖ" : "‚ùå"}

‚è∞ <b>–í—Ä–µ–º—è:</b> ${new Date().toLocaleString("ru-RU", {
      timeZone: "Europe/Moscow",
      year: "numeric",
      month: "2-digit",
      day: "2-digit",
      hour: "2-digit",
      minute: "2-digit",
    })}

üåê <b>–ò—Å—Ç–æ—á–Ω–∏–∫:</b> –ú–µ—á—Ç–∞–ú–∞–º—ã.—Ä—Ñ

#–Ω–æ–≤–∞—è_–∑–∞—è–≤–∫–∞ #–ø–æ—Ä—Ç—Ä–µ—Ç #mechtamamy
    `.trim()

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å –±–æ—Ç–∞
    const botActive = await checkBotStatus()
    if (!botActive) {
      console.warn("–ë–æ—Ç –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω, –Ω–æ –∑–∞—è–≤–∫–∞ –±—É–¥–µ—Ç –æ–±—Ä–∞–±–æ—Ç–∞–Ω–∞")
    }

    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–º—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
    let telegramSent = false
    if (botActive) {
      console.log(`–û—Ç–ø—Ä–∞–≤–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é ${ADMIN_CHAT_ID}`)
      telegramSent = await sendTelegramMessage(ADMIN_CHAT_ID, telegramMessage)

      if (telegramSent) {
        console.log("‚úÖ –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –≤ Telegram –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ —É—Å–ø–µ—à–Ω–æ")
      } else {
        console.error("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –≤ Telegram")
      }
    }

    // –õ–æ–≥–∏—Ä—É–µ–º –∑–∞—è–≤–∫—É –≤ –∫–æ–Ω—Å–æ–ª—å
    console.log("=== –ù–û–í–ê–Ø –ó–ê–Ø–í–ö–ê ===")
    console.log("–ò–º—è:", name)
    console.log("–ö–æ–Ω—Ç–∞–∫—Ç:", contact)
    console.log("–†–∞–∑–º–µ—Ä:", sizeLabel)
    console.log("–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π:", comment || "–ù–µ—Ç")
    console.log("–°–æ–≥–ª–∞—Å–∏—è:", {
      terms: agreeToTerms,
      privacy: agreeToPrivacy,
      marketing: agreeToMarketing,
    })
    console.log("–í—Ä–µ–º—è:", new Date().toISOString())
    console.log("Telegram –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ:", telegramSent ? "–î–∞" : "–ù–µ—Ç")
    console.log("==================")

    // –ò–º–∏—Ç–∞—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∑–∞—è–≤–∫–∏
    await new Promise((resolve) => setTimeout(resolve, 1000))

    return NextResponse.json(
      {
        message: "–ó–∞—è–≤–∫–∞ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞",
        telegramSent: telegramSent,
        adminNotified: telegramSent,
      },
      { status: 200 },
    )
  } catch (error) {
    console.error("–û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∑–∞—è–≤–∫–∏:", error)
    return NextResponse.json({ error: "–í–Ω—É—Ç—Ä–µ–Ω–Ω—è—è –æ—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞" }, { status: 500 })
  }
}
